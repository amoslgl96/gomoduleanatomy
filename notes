https://medium.com/rungo/anatomy-of-modules-in-go-c8274d215c16

A module is also like a package that you can share with other people. Hence, it has to be a Git or any other VCS repository which we can be hosted on a code-sharing platform like Github. Hence, Go recommends
A Go module must be a VCS repository or a VCS repository should contain a single Go module.
A Go module should contain one or more packages
A package should contain one or more .go files in a single directory.

tags are v impt. Allows one to specify the exact version of the git code to use. 
Minor/patch version is when your changes dont introduce anything that is not backwards-compatible

Go modules are stored inside $GOPATH/pkg/mod directory (module cache directory). Seems like we havenâ€™t been able to get rid of $GOPATH at all. But Go has to cache modules somewhere on the system to prevent repeated downloading of the same modules of the same versions.

So, different modules might use the same dependency version, they can just reuse the code in the pkg/mod dir

To upgrade the module version when 1.x.1 or 1.0.x  ( x change ) , we use go get -u updates
Now the time has come to explain why Go only automatically resolves only v1.x.x versions of a dependency module or why go get -u updates only modules within the current major version